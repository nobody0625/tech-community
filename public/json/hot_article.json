[
  {
    "id": 1,
    "articleId": 1,
    "img": "public/images/article/articleImg.png",
    "title": "TypeScript基础：interface 接口",
    "desciption": "TypeScript中，type支持所有类型（联合/交叉/函数等）且重复声明报错，适合非对象类型；interface仅限对象类型，可合并声明并通过extends继承，常用于类结构设计",
    "author": "nobody0607",
    "date": "2025-06-14",
    "content": "## type \u7C7B\u578B\u522B\u540D\r\n\r\n- type \u4E3A\u73B0\u6709\u7C7B\u578B\u6216\u590D\u6742\u7C7B\u578B\u7EC4\u5408\u521B\u5EFA\u65B0\u540D\u79F0\r\n- \u91CD\u590D\u58F0\u660E type \u4F1A\u62A5\u9519\r\n- type \u901A\u8FC7 & \u6765\u5B9E\u73B0\u7C7B\u578B\u7684\u6269\u5C55\r\n\r\n```ts\r\n\/\/ 1. \u5B9A\u4E49\u8054\u5408\u7C7B\u578B Id\r\ntype Id = string | number;\r\nlet id: Id = 1;\r\nid = \"a\";\r\n\r\n\/\/ 2. \u5B9A\u4E49 Point \u5BF9\u8C61\u7C7B\u578B\r\ntype Point = {\r\n  x: number;\r\n  y: number;\r\n};\r\nconst p2: Point = {\r\n  x: 1,\r\n  y: 1,\r\n};\r\n\r\n\/\/ 3. \u5B9A\u4E49\u51FD\u6570\u7C7B\u578B SetPoint\r\ntype SetPoint = (x: number, y: number) => void;\r\nconst fn: SetPoint = () => {}; \/\/ \u7A7A\u5B9E\u73B0\uFF0C\u4F46\u7C7B\u578B\u6B63\u786E\r\nfn(1, 2);\r\n\r\n\/\/ 4. type \u901A\u8FC7 & \u6765\u5B9E\u73B0\u7C7B\u578B\u7684\u6269\u5C55\r\ntype myType = {\r\n  name: string;\r\n  age: number;\r\n};\r\ntype myType1 = {\r\n  class: string;\r\n};\r\ntype newType = myType & myType1;\r\nconst newObj: newType = {\r\n  name: \"ls\",\r\n  age: 20,\r\n  class: \"1\",\r\n};\r\n```\r\n\r\n## interface \u63A5\u53E3\r\n\r\n- \u63A5\u53E3\u7528\u6765\u5B9A\u4E49\u4E00\u4E2A\u7C7B\u7ED3\u6784\r\n- \u91CD\u590D\u58F0\u660E interface \u4F1A\u5408\u5E76\r\n- \u63A5\u53E3\u4E2D\u6240\u6709\u7684\u6210\u5458\u90FD\u4E0D\u80FD\u6709\u5B9E\u9645\u7684\u503C\r\n- \u63A5\u53E3\u65E0\u6CD5\u88AB\u5B9E\u4F8B\u5316\uFF0C\u53EA\u80FD\u88AB\u5B9E\u73B0 `implements`\r\n- \u4E00\u4E2A\u5B9E\u73B0\u63A5\u53E3\u7684\u7C7B\uFF0C\u5FC5\u987B\u5B9E\u73B0\u63A5\u53E3\u5185\u6240\u63CF\u8FF0\u7684\u6240\u6709\u6210\u5458\r\n- \u63A5\u53E3\u5141\u8BB8\u7EE7\u627F\u591A\u4E2A\u63A5\u53E3\u6765\u62D3\u5C55\u81EA\u5DF1\uFF0C\u7EE7\u627F\u7684\u5404\u4E2A\u63A5\u53E3\u4F7F\u7528\u9017\u53F7 `,` \u5206\u9694\r\n\r\n```ts\r\ninterface myInterface {\r\n  name: string;\r\n  age: number;\r\n  run(): boolean;\r\n}\r\nclass person implements myInterface {\r\n  name: string;\r\n  age: number;\r\n\r\n  constructor(name: string, age: number) {\r\n    this.name = name;\r\n    this.age = age;\r\n  }\r\n  run(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\ninterface IParent1 {\r\n  v1: number;\r\n}\r\ninterface IParent2 {\r\n  v2: number;\r\n}\r\ninterface Child extends IParent1, IParent2 {}\r\nlet Iobj: Child = { v1: 12, v2: 23 };\r\nconsole.log(\"value 1: \" + Iobj.v1 + \" value 2: \" + Iobj.v2); \/\/ value 1: 12 value 2: 23\r\n```\r\n\r\n## type \u548C interface \u7684\u533A\u522B\r\n\r\n- type \u4E0D\u4F1A\u521B\u5EFA\u65B0\u7684\u7C7B\u578B\uFF0C\u5B83\u53EA\u662F\u5BF9\u5DF2\u6709\u7C7B\u578B\u7684\u76F4\u63A5\u5F15\u7528\uFF0C\u800C interface \u662F\u5B9A\u4E49\u4E86\u4E00\u4E2A\u65B0\u7684\u63A5\u53E3\u7C7B\u578B\r\n- type \u80FD\u591F\u8868\u793A\u975E\u5BF9\u8C61\u7C7B\u578B\uFF0C\u800C interface \u5219\u53EA\u80FD\u8868\u793A\u5BF9\u8C61\u7C7B\u578B\r\n- interface \u901A\u8FC7 extends \u7EE7\u627F\u5176\u4ED6\u63A5\u53E3\uFF0Ctype \u901A\u8FC7 & \u5B9E\u73B0\u7C7B\u578B\u7684\u6269\u5C55\r\n- \u91CD\u590D\u58F0\u660E interface \u4F1A\u5408\u5E76\uFF0C\u91CD\u590D\u58F0\u660E type \u62A5\u9519"
  },
  {
    "id": 2,
    "articleId": 2,
    "img": "public/images/article/articleImg.png",
    "title": "interface 接口",
    "desciption": "TypeScript中，type支持所有类型（联合/交叉/函数等）且重复声明报错，适合非对象类型；interface仅限对象类型，可合并声明并通过extends继承，常用于类结构设计",
    "author": "nobody0607",
    "date": "2025-06-14",
    "content": "## type \u7C7B\u578B\u522B\u540D\r\n\r\n- type \u4E3A\u73B0\u6709\u7C7B\u578B\u6216\u590D\u6742\u7C7B\u578B\u7EC4\u5408\u521B\u5EFA\u65B0\u540D\u79F0\r\n- \u91CD\u590D\u58F0\u660E type \u4F1A\u62A5\u9519\r\n- type \u901A\u8FC7 & \u6765\u5B9E\u73B0\u7C7B\u578B\u7684\u6269\u5C55\r\n\r\n```ts\r\n\/\/ 1. \u5B9A\u4E49\u8054\u5408\u7C7B\u578B Id\r\ntype Id = string | number;\r\nlet id: Id = 1;\r\nid = \"a\";\r\n\r\n\/\/ 2. \u5B9A\u4E49 Point \u5BF9\u8C61\u7C7B\u578B\r\ntype Point = {\r\n  x: number;\r\n  y: number;\r\n};\r\nconst p2: Point = {\r\n  x: 1,\r\n  y: 1,\r\n};\r\n\r\n\/\/ 3. \u5B9A\u4E49\u51FD\u6570\u7C7B\u578B SetPoint\r\ntype SetPoint = (x: number, y: number) => void;\r\nconst fn: SetPoint = () => {}; \/\/ \u7A7A\u5B9E\u73B0\uFF0C\u4F46\u7C7B\u578B\u6B63\u786E\r\nfn(1, 2);\r\n\r\n\/\/ 4. type \u901A\u8FC7 & \u6765\u5B9E\u73B0\u7C7B\u578B\u7684\u6269\u5C55\r\ntype myType = {\r\n  name: string;\r\n  age: number;\r\n};\r\ntype myType1 = {\r\n  class: string;\r\n};\r\ntype newType = myType & myType1;\r\nconst newObj: newType = {\r\n  name: \"ls\",\r\n  age: 20,\r\n  class: \"1\",\r\n};\r\n```\r\n\r\n## interface \u63A5\u53E3\r\n\r\n- \u63A5\u53E3\u7528\u6765\u5B9A\u4E49\u4E00\u4E2A\u7C7B\u7ED3\u6784\r\n- \u91CD\u590D\u58F0\u660E interface \u4F1A\u5408\u5E76\r\n- \u63A5\u53E3\u4E2D\u6240\u6709\u7684\u6210\u5458\u90FD\u4E0D\u80FD\u6709\u5B9E\u9645\u7684\u503C\r\n- \u63A5\u53E3\u65E0\u6CD5\u88AB\u5B9E\u4F8B\u5316\uFF0C\u53EA\u80FD\u88AB\u5B9E\u73B0 `implements`\r\n- \u4E00\u4E2A\u5B9E\u73B0\u63A5\u53E3\u7684\u7C7B\uFF0C\u5FC5\u987B\u5B9E\u73B0\u63A5\u53E3\u5185\u6240\u63CF\u8FF0\u7684\u6240\u6709\u6210\u5458\r\n- \u63A5\u53E3\u5141\u8BB8\u7EE7\u627F\u591A\u4E2A\u63A5\u53E3\u6765\u62D3\u5C55\u81EA\u5DF1\uFF0C\u7EE7\u627F\u7684\u5404\u4E2A\u63A5\u53E3\u4F7F\u7528\u9017\u53F7 `,` \u5206\u9694\r\n\r\n```ts\r\ninterface myInterface {\r\n  name: string;\r\n  age: number;\r\n  run(): boolean;\r\n}\r\nclass person implements myInterface {\r\n  name: string;\r\n  age: number;\r\n\r\n  constructor(name: string, age: number) {\r\n    this.name = name;\r\n    this.age = age;\r\n  }\r\n  run(): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\ninterface IParent1 {\r\n  v1: number;\r\n}\r\ninterface IParent2 {\r\n  v2: number;\r\n}\r\ninterface Child extends IParent1, IParent2 {}\r\nlet Iobj: Child = { v1: 12, v2: 23 };\r\nconsole.log(\"value 1: \" + Iobj.v1 + \" value 2: \" + Iobj.v2); \/\/ value 1: 12 value 2: 23\r\n```\r\n\r\n## type \u548C interface \u7684\u533A\u522B\r\n\r\n- type \u4E0D\u4F1A\u521B\u5EFA\u65B0\u7684\u7C7B\u578B\uFF0C\u5B83\u53EA\u662F\u5BF9\u5DF2\u6709\u7C7B\u578B\u7684\u76F4\u63A5\u5F15\u7528\uFF0C\u800C interface \u662F\u5B9A\u4E49\u4E86\u4E00\u4E2A\u65B0\u7684\u63A5\u53E3\u7C7B\u578B\r\n- type \u80FD\u591F\u8868\u793A\u975E\u5BF9\u8C61\u7C7B\u578B\uFF0C\u800C interface \u5219\u53EA\u80FD\u8868\u793A\u5BF9\u8C61\u7C7B\u578B\r\n- interface \u901A\u8FC7 extends \u7EE7\u627F\u5176\u4ED6\u63A5\u53E3\uFF0Ctype \u901A\u8FC7 & \u5B9E\u73B0\u7C7B\u578B\u7684\u6269\u5C55\r\n- \u91CD\u590D\u58F0\u660E interface \u4F1A\u5408\u5E76\uFF0C\u91CD\u590D\u58F0\u660E type \u62A5\u9519"
  }
]
